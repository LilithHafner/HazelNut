// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function lookup(key, _plst) {
  while(true) {
    var plst = _plst;
    if (plst) {
      var match = plst[0];
      if (Caml_obj.caml_equal(match[0], key)) {
        return match[1];
      }
      _plst = plst[1];
      continue ;
    }
    console.log(key);
    throw Caml_builtin_exceptions.not_found;
  };
}

function add(param, plst) {
  var v = param[1];
  if (!plst) {
    return /* :: */[
            /* tuple */[
              param[0],
              v
            ],
            /* [] */0
          ];
  }
  var p = plst[0];
  return /* :: */[
          /* tuple */[
            p[0],
            List.concat(/* :: */[
                  v,
                  /* :: */[
                    p[1],
                    /* [] */0
                  ]
                ])
          ],
          plst[1]
        ];
}

exports.lookup = lookup;
exports.add = add;
/* No side effect */
